[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "洪培翊 Peiyi Hung",
    "section": "",
    "text": "熱愛資料視覺化，相信設計良好的統計圖表更能展現資料分析的價值。在工作中及各種媒體上，都能接觸到不少的統計圖表，看到設計的很差或醜陋的統計圖表，心中會忍不住的湧起想要將他們重新製作的衝動。\n學生時代名義上學的是經濟學，卻更著迷於統計學。因統計學而學會了使用R來整理及分析資料，並使用ggplot2來繪製圖表。正朝著資料視覺化專家邁進，希望未來能成為統計圖表的專業設計師。\n你(妳)可以透過 p8526900@gmail.com 聯繫我，歡迎跟我分享及交流更多與資料視覺化或資料分析相關的事物。"
  },
  {
    "objectID": "index.html#bio",
    "href": "index.html#bio",
    "title": "洪培翊 Peiyi Hung",
    "section": "",
    "text": "熱愛資料視覺化，相信設計良好的統計圖表更能展現資料分析的價值。在工作中及各種媒體上，都能接觸到不少的統計圖表，看到設計的很差或醜陋的統計圖表，心中會忍不住的湧起想要將他們重新製作的衝動。\n學生時代名義上學的是經濟學，卻更著迷於統計學。因統計學而學會了使用R來整理及分析資料，並使用ggplot2來繪製圖表。正朝著資料視覺化專家邁進，希望未來能成為統計圖表的專業設計師。\n你(妳)可以透過 p8526900@gmail.com 聯繫我，歡迎跟我分享及交流更多與資料視覺化或資料分析相關的事物。"
  },
  {
    "objectID": "index.html#on-this-site",
    "href": "index.html#on-this-site",
    "title": "洪培翊 Peiyi Hung",
    "section": "On this site",
    "text": "On this site\n\n\n\nDataViz\n統計圖表的概念、實作\n\n\nGallery\n我的資料視覺化作品\n\n\nLearning\n記錄及分享我正在學習的事物"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "dataViz.html",
    "href": "dataViz.html",
    "title": "Data Visualization 資料視覺化",
    "section": "",
    "text": "對長條圖感到厭煩？何不試試棒棒糖圖(Lollipop chart)\n\n\n\n\n\n\nR\n\n\nggplot\n\n\n\n簡介棒棒糖圖(Lollipop chart)，告訴你什麼時候可以使用，並用ggplot2繪製它。\n\n\n\n\n\nSep 17, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n身心障礙者人數佔總人口比率-資料取得、整理及視覺化\n\n\n\n\n\n\nR\n\n\ntidyverse\n\n\nggplot\n\n\ndot plot\n\n\n\n展示如何從Excel檔案中提取資料，再以點圖(dot plot)的方式做視覺化。\n\n\n\n\n\nSep 16, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n如何使用ggplot2繪製長條圖\n\n\n\n\n\n\nR\n\n\nggplot\n\n\nbarplot\n\n\n\n告訴你如何繪製基本的長條圖並調整長條的顏色、寬度及排列順序。\n\n\n\n\n\nAug 2, 2024\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/DataViz/2024-08-02_batchart/barplot.html",
    "href": "posts/DataViz/2024-08-02_batchart/barplot.html",
    "title": "如何使用ggplot2繪製長條圖",
    "section": "",
    "text": "這篇文章中，我會呈現使用ggplot2繪製長條圖的方法，其中包含如何調整長條的顏色、寬度及排列順序。我會使用R的tidyverse package來整理資料及繪製長條，所以要先載入它：\nlibrary(tidyverse)"
  },
  {
    "objectID": "posts/DataViz/2024-08-02_batchart/barplot.html#基本顏色設定",
    "href": "posts/DataViz/2024-08-02_batchart/barplot.html#基本顏色設定",
    "title": "如何使用ggplot2繪製長條圖",
    "section": "(1) 基本顏色設定",
    "text": "(1) 基本顏色設定\n\n# color是外框，fill是填滿\nggplot(mtcars, aes(cyl)) +\n    geom_bar(color = \"blue\", fill = rgb(0.1, 0.4, 0.5, 0.7))\n\n\n\n\n\n\n\n\n\n在這裡ggplot先根據氣缸的數量將資料做分割，再計算數量，所以這裡的stat就是預設的\"count\"不需特別指定。\ncolor 控制的是長條的外框，而非內部的顏色，fill才是控制填滿顏色的。\nrgb函數中的4個值分別代表了紅、綠、藍三種顏色，第4個則是透明度。可以分別放入[0,1]間的數字，數字越大，顏色越深，透明度越低。rgb顏色設定更常見的形式是像這樣 rgb(54, 194, 206)，每個數值是落在[0,255]這個區間之間，rgb函數則是要透過設定maxColorValue來達成。例子如下：\n\n#設定想要的顏色\nrgb_color &lt;- rgb(54, 194, 206, maxColorValue = 255)\n\n#使用顏色畫圖\nggplot(mtcars, aes(cyl)) +\n    geom_bar(fill = rgb_color)"
  },
  {
    "objectID": "posts/DataViz/2024-08-02_batchart/barplot.html#使用色相hue",
    "href": "posts/DataViz/2024-08-02_batchart/barplot.html#使用色相hue",
    "title": "如何使用ggplot2繪製長條圖",
    "section": "(2) 使用色相(Hue)",
    "text": "(2) 使用色相(Hue)\n我們可以使用scalu_fill_hue來利用設定色相的方法調整顏色：\n\nggplot(mtcars, aes(x = cyl, fill = cyl)) +\n    geom_bar() +\n    scale_fill_hue()\n\n\n\n\n\n\n\n\nscale_fill_hue會根據h這個變量所指定的範圍中，等距的指定顏色。h的值會落在[0,360]間，以順時針的方向指定配色環的範圍：\n\n\n\n\n\n\nggplot(mtcars, aes(x = cyl, fill = cyl)) +\n    geom_bar() +\n    scale_fill_hue(h = c(0, 30))\n\n\n\n\n\n\n\n\n\nggplot(mtcars, aes(x = cyl, fill = cyl)) +\n    geom_bar() +\n    scale_fill_hue(h = c(180, 210))\n\n\n\n\n\n\n\n\n\nggplot(mtcars, aes(x = cyl, fill = cyl)) +\n    geom_bar() +\n    scale_fill_hue(h = c(0, 180))\n\n\n\n\n\n\n\n\nscale_fill_hue中得c和l則是分別指定深淺及亮度，可以放入[0,100]中的值：\n\nggplot(mtcars, aes(x = cyl, fill = cyl)) +\n    geom_bar() +\n    scale_fill_hue(h = c(0, 180), c = 90) #較大的c\n\n\n\n\n\n\n\n\n\nggplot(mtcars, aes(x = cyl, fill = cyl)) +\n    geom_bar() +\n    scale_fill_hue(h = c(0, 180), c = 40) #較小的c\n\n\n\n\n\n\n\n\n\nggplot(mtcars, aes(x = cyl, fill = cyl)) +\n    geom_bar() +\n    scale_fill_hue(h = c(0, 180), l = 90) #較大的l\n\n\n\n\n\n\n\n\n\nggplot(mtcars, aes(x = cyl, fill = cyl)) +\n    geom_bar() +\n    scale_fill_hue(h = c(0, 180), l = 30) #較小的l"
  },
  {
    "objectID": "posts/DataViz/2024-08-02_batchart/barplot.html#使用rcolorbrewer",
    "href": "posts/DataViz/2024-08-02_batchart/barplot.html#使用rcolorbrewer",
    "title": "如何使用ggplot2繪製長條圖",
    "section": "(3) 使用RColorBrewer",
    "text": "(3) 使用RColorBrewer\nRColorBrewer提供了幾組可用的顏色：\n\n\n\n\n\n用法是在ggplot2的scale_fill_brewer函數中輸入想要的顏色代碼：\n\nggplot(mtcars, aes(x = cyl, fill = cyl)) +\n    geom_bar() +\n    scale_fill_brewer(palette = \"Dark2\")"
  },
  {
    "objectID": "posts/DataViz/2024-08-02_batchart/barplot.html#手動設定個別長條的顏色",
    "href": "posts/DataViz/2024-08-02_batchart/barplot.html#手動設定個別長條的顏色",
    "title": "如何使用ggplot2繪製長條圖",
    "section": "(4) 手動設定個別長條的顏色",
    "text": "(4) 手動設定個別長條的顏色\nscale_fill_manual讓你可以手動指定顏色，要注意的是指定的顏色數量至少要多於種類的數量。\n\nggplot(mtcars, aes(x = cyl, fill = cyl)) + \n    geom_bar() +\n    scale_fill_manual(values = c(\"red\", \"blue\", \"green\"))\n\n\n\n\n\n\n\n\n也可以指定16進位色碼：\n\nggplot(mtcars, aes(x = cyl, fill = cyl)) + \n    geom_bar() +\n    scale_fill_manual(values = c(\"#F4CE14\", \"#379777\", \"#45474B\"))\n\n\n\n\n\n\n\n\n或使用rgb函數：\n\ncolors &lt;- c(\n    rgb(244, 206, 20, maxColorValue = 255),\n    rgb(55, 151, 119, maxColorValue = 255),\n    rgb(69, 71, 75, maxColorValue = 255)\n)\n\nggplot(mtcars, aes(x = cyl, fill = cyl)) + \n    geom_bar() +\n    scale_fill_manual(values = colors)"
  },
  {
    "objectID": "posts/DataViz/2024-08-02_batchart/barplot.html#不同類別使用不同的寬度",
    "href": "posts/DataViz/2024-08-02_batchart/barplot.html#不同類別使用不同的寬度",
    "title": "如何使用ggplot2繪製長條圖",
    "section": "不同類別使用不同的寬度",
    "text": "不同類別使用不同的寬度\nwidth這個aesthetic可以讓你調整個別的長條寬度，我現在data中加入一個width變數，讓每一個類別根據其數值調整寬度，數值是預設寬度的倍數：\n\ndata |&gt; mutate(\n    width = c(.5, .9, .4, .3, 1) # E是原來的寬度，A則是一半，\n) |&gt; \n    ggplot(aes(x = name, y = value, width = width)) +\n    geom_bar(stat = \"identity\")"
  },
  {
    "objectID": "posts/DataViz/身心障礙者人數/身心障礙人數.html",
    "href": "posts/DataViz/身心障礙者人數/身心障礙人數.html",
    "title": "身心障礙者人數佔總人口比率-資料取得、整理及視覺化",
    "section": "",
    "text": "在這篇文章中，我會展示如何使用R從Excel檔案中提取資料，並整理成需要的形式，最後再將各縣市男性與女性的身心障礙者人數佔總人口數比率以點圖(dot plot)的方式做視覺化。目標的圖表長這樣："
  },
  {
    "objectID": "posts/DataViz/身心障礙者人數/身心障礙人數.html#下載資料",
    "href": "posts/DataViz/身心障礙者人數/身心障礙人數.html#下載資料",
    "title": "身心障礙者人數佔總人口比率-資料取得、整理及視覺化",
    "section": "下載資料",
    "text": "下載資料\n使用的資料是從衛生福利部統計處的網站下載，在「衛生福利公務統計」&gt;「社會福利公務統計一覽表」中的「2.3.1身心障礙者人數按類別及縣市別分」統計表。大致上長這樣：\n\n\n\n\n\n統計表是Excel格式，資料內容包含：\n\n身心障礙者人數，分男性與女性\n各類別身心障礙者人數\n身心障礙者人數佔總人口比率\n上面三項資料依照各縣市區分\n從2011年到2023年的資料\n\n我們需要將資料從Excel檔案中提取出來。"
  },
  {
    "objectID": "posts/DataViz/身心障礙者人數/身心障礙人數.html#從excel表中擷取需要的資料",
    "href": "posts/DataViz/身心障礙者人數/身心障礙人數.html#從excel表中擷取需要的資料",
    "title": "身心障礙者人數佔總人口比率-資料取得、整理及視覺化",
    "section": "從Excel表中擷取需要的資料",
    "text": "從Excel表中擷取需要的資料\n首先，讓我們先載入需要的library：\n\nlibrary(tidyverse)\nlibrary(readxl)\n\n\ntidyverse是用來整理資料及繪製統計圖表\nreadxl則是用來讀取Excel檔案\n\n接著，我們用readxl中的read_xlsx來讀取人數佔比率的資料：\n\nread_xlsx(\"data/2.3.1身心障礙者人數按類別及縣市別分.xlsx\", \n          sheet = \"2023\", \n          range = anchored(\"A8\", dim = c(23, 17)),\n          col_names = as.character(1:17)) |&gt; #從excel檔中提取所需的資料\nselect(\"1\", \"15\",\"16\", \"17\")  |&gt; #挑選需要的變數\nrename(\"region\" = \"1\", #對變數重新命名\n       \"total\" = \"15\",\n       \"male\" = \"16\",\n       \"female\" = \"17\") \n\n我會一項接著一項解釋這段程式碼做了什麼：\n\nread_xlsx：\n\n第一項要放入Excel檔案的位置。\nsheet則是指定你要的哪一個資料表，這裡放入\"2023\"代表你想要讀取的是名字為「2023」的工作表。如果放入數字的話，則是告訴這個函數要讀取第幾個表，舉例來說，若設定sheet = 5則會讀取第5個表。\nrange是用來指定要選取的儲存格範圍。anchored(\"A8\", dim = c(23, 17))指定的是儲存格A8向下23列、向右17行的資料。\n其他指定資料範圍的方法包括range = \"B3:D6\" 來指定一個長方形的左上角及右下角、range = cell_rows(3:5)來選取第3到5行的資料，細節可參考這裡。\ncol_names = as.character(1:17)則是暫時給每一個column暫時的名稱。會這麼做的原因是，如果不這麼做，column name中會包含中文，我在寫code的途中這麼做的時候，我的R session不斷地當機，必須改成不包含中文的名稱才能順利讀取資料。\n\n從Excel中可以知道第1、15、16、17是我們需要的變數，select(\"1\", \"15\",\"16\", \"17\")用來選取我們要的columns。\nrename(\"region\" = \"1\", \"total\" = \"15\", \"male\" = \"16\", \"female\" = \"17\")則是將column name改成更好理解的名稱。\n\n提取出來的資料集，就會包含我們所需要的資料：\n\ndf &lt;- read_xlsx(\"data/2.3.1身心障礙者人數按類別及縣市別分.xlsx\", \n          sheet = \"2023\",\n          range = anchored(\"A8\", dim = c(23, 17)),\n          col_names = as.character(1:17)) |&gt; #從excel檔中提取所需的資料\nselect(\"1\", \"15\",\"16\", \"17\")  |&gt; #挑選需要的變數\nrename(\"region\" = \"1\",\n       \"total\" = \"15\",\n       \"male\" = \"16\",\n       \"female\" = \"17\") #對變數重新命名\n\ndf\n\n# A tibble: 23 × 4\n   region                 total  male female\n   &lt;chr&gt;                  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n 1 總計  Total             5.19  5.79   4.6 \n 2 新北市 New Taipei City  4.44  5.07   3.85\n 3 臺北市 Taipei City      4.74  5.33   4.21\n 4 桃園市 Taoyuan City     3.96  4.48   3.46\n 5 臺中市 Taichung City    4.68  5.28   4.11\n 6 臺南市 Tainan City      5.35  5.91   4.8 \n 7 高雄市 Kaohsiung City   5.4   5.99   4.84\n 8 宜蘭縣 Yilan County     7.06  7.58   6.54\n 9 新竹縣 Hsinchu County   4.04  4.6    3.46\n10 苗栗縣 Miaoli County    6.32  6.93   5.66\n# ℹ 13 more rows"
  },
  {
    "objectID": "posts/DataViz/身心障礙者人數/身心障礙人數.html#整理地區的文字",
    "href": "posts/DataViz/身心障礙者人數/身心障礙人數.html#整理地區的文字",
    "title": "身心障礙者人數佔總人口比率-資料取得、整理及視覺化",
    "section": "整理地區的文字",
    "text": "整理地區的文字\n你可以觀察到，各縣市的文字中包含縣市的英文，為了能將縣市名稱更簡潔的呈現在圖表中，我們要剔除英文名稱。\n首先，我們先將地區名稱中英文的部分分開來：\n\ndf |&gt; separate_wider_delim(\n        cols = region, \n        delim = \" \",\n        names = c(\"region\", \"region_eng\"),\n        too_many = \"drop\"\n    )\n\n# A tibble: 23 × 5\n   region region_eng  total  male female\n   &lt;chr&gt;  &lt;chr&gt;       &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n 1 總計   \"\"           5.19  5.79   4.6 \n 2 新北市 \"New\"        4.44  5.07   3.85\n 3 臺北市 \"Taipei\"     4.74  5.33   4.21\n 4 桃園市 \"Taoyuan\"    3.96  4.48   3.46\n 5 臺中市 \"Taichung\"   4.68  5.28   4.11\n 6 臺南市 \"Tainan\"     5.35  5.91   4.8 \n 7 高雄市 \"Kaohsiung\"  5.4   5.99   4.84\n 8 宜蘭縣 \"Yilan\"      7.06  7.58   6.54\n 9 新竹縣 \"Hsinchu\"    4.04  4.6    3.46\n10 苗栗縣 \"Miaoli\"     6.32  6.93   5.66\n# ℹ 13 more rows\n\n\n\nseparate_wider_delim()函數的功能是將字串根據某個符號為分界，來分開為不同行。\ncols指定要分開的對象，這裡我們要分開的目標是region這一行。\ndelim則是指定要以什麼文字或符號分開，這裡我們以中英文之間的空格做區分，所以delim = \" \"。\nnames是指定你分開後的行要叫什麼名稱。\n如果以仔細觀察，可以發現region中的文字有的包含不只一個空格，因為我們只想以第一個空格做切分，所以設定too_many = \"drop\"把多的部分都丟掉\n\n接著我們再把不需要的region_eng丟掉，並將region中的「總計」轉換成「全國」：\n\ndf &lt;- df |&gt; separate_wider_delim(\n        cols = region, \n        delim = \" \",\n        names = c(\"region\", \"region_eng\"),\n        too_many = \"drop\"\n    ) |&gt; \n    select(-2) |&gt; \n    mutate(\n        region = if_else(region == \"總計\", \"全國\", region)\n    )\ndf\n\n# A tibble: 23 × 4\n   region total  male female\n   &lt;chr&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n 1 全國    5.19  5.79   4.6 \n 2 新北市  4.44  5.07   3.85\n 3 臺北市  4.74  5.33   4.21\n 4 桃園市  3.96  4.48   3.46\n 5 臺中市  4.68  5.28   4.11\n 6 臺南市  5.35  5.91   4.8 \n 7 高雄市  5.4   5.99   4.84\n 8 宜蘭縣  7.06  7.58   6.54\n 9 新竹縣  4.04  4.6    3.46\n10 苗栗縣  6.32  6.93   5.66\n# ℹ 13 more rows\n\n\n\nselect(-2)的意思是選擇除了第2行以外的變數。\nmutate( region = if_else(region == \"總計\", \"全國\", region) )則是當region中的值是「總計」時用「全國」取代它，其他的時候則保留原本region的值。"
  },
  {
    "objectID": "posts/DataViz/身心障礙者人數/身心障礙人數.html#轉換資料架構",
    "href": "posts/DataViz/身心障礙者人數/身心障礙人數.html#轉換資料架構",
    "title": "身心障礙者人數佔總人口比率-資料取得、整理及視覺化",
    "section": "轉換資料架構",
    "text": "轉換資料架構\n我們需要資料是tidy的形式，代表資料集中的每一個行都是一個變數，每一個儲存格中都只儲存一個值(更詳細的定義及解釋可參考這裡)。原本的資料中，性別(gender)這個變數沒有被列在一個行中，而是分別散佈在三個不同的行中，我們可以使用pivot_longer做到這件事：\n\ndf &lt;- df |&gt; pivot_longer(\n        cols = c(\"total\", \"male\", \"female\"),\n        names_to = \"gender\",\n        values_to = \"ratio\")\n\n\npivot_longer 是將原本的資料「拉長」，將存於行標題中的資料放到儲存格裡。\ncols指定要轉換的行，我們要將性別的資料放下來到儲存格中，所以設定cols = c(\"total\", \"male\", \"female\")。\nnames_to指定我們放下來的資料那一行的標題名稱，因為是性別資料，因此設定為names_to = \"gender\"。\n原本在\"total\", \"male\", \"female\" 下方的資料是比率，所以透過values_to = \"ratio\"將它們命名為ratio。\n\n整理完後的資料就會呈現這樣的形式：\n\n\n# A tibble: 69 × 3\n   region gender ratio\n   &lt;chr&gt;  &lt;chr&gt;  &lt;dbl&gt;\n 1 全國   total   5.19\n 2 全國   male    5.79\n 3 全國   female  4.6 \n 4 新北市 total   4.44\n 5 新北市 male    5.07\n 6 新北市 female  3.85\n 7 臺北市 total   4.74\n 8 臺北市 male    5.33\n 9 臺北市 female  4.21\n10 桃園市 total   3.96\n# ℹ 59 more rows\n\n\n整理好資料後，我們終於可以進入視覺化的部分。"
  },
  {
    "objectID": "posts/DataViz/身心障礙者人數/身心障礙人數.html#主要圖形",
    "href": "posts/DataViz/身心障礙者人數/身心障礙人數.html#主要圖形",
    "title": "身心障礙者人數佔總人口比率-資料取得、整理及視覺化",
    "section": "主要圖形",
    "text": "主要圖形\n先畫出每個縣市男性與女性比率的點，以及連接的線段：\n\ndf |&gt; \n    filter(gender != \"total\") |&gt;  \n    ggplot(aes(x = ratio, y = region)) +\n    geom_line() +\n    geom_point() \n\n\n\n\n\n\n\n\n\n因為我們不需要總體的比率，所以用filter(gender != \"total\")將它們篩選掉。\n我們想要將縣市的位置畫在y軸，比率的資料畫在x軸，所以ggplot中的aes會設定成aes(x = ratio, y = region)。\ngeom_line及geom_point分別畫出線段及點。\n\n為了更容易區分男性及女性的資料，我會將它們塗上不同的顏色。除此之外，還會設定點的大小以及線段的粗細：\n\ndf |&gt; \n    filter(gender != \"total\") |&gt;  \n    ggplot(aes(x = ratio, y = region)) +\n    geom_line(linewidth = 1.5, color = \"#758694\") +\n    geom_point(aes(color = gender), size = 2) \n\n\n\n\n\n\n\n\n\ngeom_line中，linewidth及color是用來調整線的粗細及顏色。\ngeom_point中的aes(color = gender)則是說我們要根據gender這個變數來調整點的顏色。\n\n你應該已經發現了，Ｒ這時沒辦法顯示中文字，我們可以用指定中文字型的方式來解決：\n\ndf |&gt; \n    filter(gender != \"total\") |&gt;  \n    ggplot(aes(x = ratio, y = region)) +\n    geom_line(linewidth = 1.5, color = \"#758694\") +\n    geom_point(aes(color = gender), size = 2) +\n    theme(\n        text = element_text(family = \"Noto Sans TC\")\n    )\n\n\n\n\n\n\n\n\n\ntheme函數是用來設定圖表的整體風格的，之後我們會再用到它。\ntheme函數中調整圖案風格的方法大都是以element_{物件種類}的方式分做設定。舉例來說，我們要調整的是文字，所以是用element_text，如果要調整的物件是線條的話，那就是用element_line。\nfamily = \"Noto Sans TC\"則是將字體設定為煩繁體中文的思源黑體。\n\n為了保持一致性，我會將縣市間呈現的順序調整成與原始資料集中呈現的一樣。做法是將region這個變數調整成Ｒ的factor類型變數，再指定其level，訂定縣市的先後順序。所以我們先做一個表示level的vector：\n\nregion_level &lt;- df |&gt; \n    select(region) |&gt; \n    distinct(region) |&gt; \n    pull() |&gt; \n    rev()\nregion_level\n\n [1] \"連江縣\" \"金門縣\" \"嘉義市\" \"新竹市\" \"基隆市\" \"澎湖縣\" \"花蓮縣\" \"臺東縣\"\n [9] \"屏東縣\" \"嘉義縣\" \"雲林縣\" \"南投縣\" \"彰化縣\" \"苗栗縣\" \"新竹縣\" \"宜蘭縣\"\n[17] \"高雄市\" \"臺南市\" \"臺中市\" \"桃園市\" \"臺北市\" \"新北市\" \"全國\"  \n\n\n再將region轉化為factor：\n\np &lt;- df |&gt; \n    filter(gender != \"total\") |&gt;  \n    ggplot(aes(x = ratio, y = factor(region, region_level))) + #轉換為factor\n    geom_line(linewidth = 1.5, color = \"#758694\") +\n    geom_point(aes(color = gender), size = 2) +\n    theme(\n        text = element_text(family = \"Noto Sans TC\")\n    )\np"
  },
  {
    "objectID": "posts/DataViz/身心障礙者人數/身心障礙人數.html#調整scale變數",
    "href": "posts/DataViz/身心障礙者人數/身心障礙人數.html#調整scale變數",
    "title": "身心障礙者人數佔總人口比率-資料取得、整理及視覺化",
    "section": "調整Scale變數",
    "text": "調整Scale變數\n在圖表中，我們在x軸畫出比率的資料，在y軸分別縣市，用顏色區分性別。在ggplot2中，我們可以使用scale_{aes}_{type}的方式調整這三項要素呈現的方式，aes指的是要設定的要素，type則是定義我們設定這個aes的方法或要呈現的形式。\n指定不同性別的顏色\n\np + scale_color_discrete(\n      labels = c(\"女性\", \"男性\"), #改變性別的呈現方式\n      type = c(\"#E76F55\", \"#01B8A9\") #指定顏色\n    )\n\n\n\n\n\n\n\n\n\n因為要調整的是顏色，所以是scale_color_{type}。另外，因為性別是離散的變數，所以是scale_color_discrete。\nlabels指定的是呈現性別這個變數的標籤，你可以看到右方的圖示改變了。type則是指定要呈現的顏色。\n\n調整x軸標籤的格式\n我們的目標圖形中，x軸的數字是呈現到小數點後一位，我們可以用scales這個library來設定：\n\np + scale_x_continuous(\n    labels = scales::label_number(accuracy = 0.1),\n    breaks = seq(3, 9, 1)\n)\n\n\n\n\n\n\n\n\n\nscales::label_number(accuracy = 0.1)是將你所呈現的數字的精準度以0.1為一單位。在scales library中，還有其他函數能指定你數值呈現的方式，例如label_dollar可以將數字轉化為貨幣的形式，更多細節可以參考這裡。\nbreaks = seq(3, 9, 1)則是設定你要呈現標記出數值的地方。用下面這個例子來讓你更暸解其運作方式，如果我們x軸標籤只想要顯示5和8兩個數值：\n\np + scale_x_continuous(\n    labels = scales::label_number(accuracy = 0.1),\n    breaks = c(5, 8)\n)\n\n\n\n\n\n\n\n\n\n將上面2個部分整合起來：\n\np &lt;- p + \n    scale_color_discrete(\n        labels = c(\"女性\", \"男性\"), #性別標籤\n        type = c(\"#E76F55\", \"#01B8A9\") #指定顏色\n    ) +\n    scale_x_continuous(\n        labels = scales::label_number(accuracy = 0.1), #以0.1為最小單位\n        breaks = seq(3, 9, by = 1) #標記3到9\n    )\np"
  },
  {
    "objectID": "posts/DataViz/身心障礙者人數/身心障礙人數.html#直接將縣市標示在圖形旁邊",
    "href": "posts/DataViz/身心障礙者人數/身心障礙人數.html#直接將縣市標示在圖形旁邊",
    "title": "身心障礙者人數佔總人口比率-資料取得、整理及視覺化",
    "section": "直接將縣市標示在圖形旁邊",
    "text": "直接將縣市標示在圖形旁邊\n為了讓讀者更容易辨別每一個線段屬於哪一個縣市，我們可以將縣市的文字標注在線段旁邊。我們首先製作一個資料集用來指定要標記的文字及標注的位置：\n\nloca &lt;- df |&gt; \n    filter(\n        gender == \"female\"\n    ) |&gt; \n    mutate(\n        position = ratio - .2\n    )\nloca\n\n# A tibble: 23 × 4\n   region gender ratio position\n   &lt;chr&gt;  &lt;chr&gt;  &lt;dbl&gt;    &lt;dbl&gt;\n 1 全國   female  4.6      4.4 \n 2 新北市 female  3.85     3.65\n 3 臺北市 female  4.21     4.01\n 4 桃園市 female  3.46     3.26\n 5 臺中市 female  4.11     3.91\n 6 臺南市 female  4.8      4.6 \n 7 高雄市 female  4.84     4.64\n 8 宜蘭縣 female  6.54     6.34\n 9 新竹縣 female  3.46     3.26\n10 苗栗縣 female  5.66     5.46\n# ℹ 13 more rows\n\n\n\n因為我們要將文字標記在女性比例的左側，所以我們只保留女性的資料(filter(gender == \"female\"))。\n文字的位置要放在女性比率的左側一點點，所以透過將比率的值減去一點點，新設立一個新變數來表示位置mutate( position = ratio - .2 )。\n\n我們使用geom_text來標注文字：\n\np &lt;- p + \n    geom_text(data = loca, \n              aes(y = region, \n                  x = position, \n                  label = region, \n                  family = \"Noto Sans TC\"), \n              size=3) \np\n\n\n\n\n\n\n\n\n\n因為我們現在要用loca來畫圖，所以要將資料設定為loca，data = loca。\n在aes()中，x和y是指定文字的座標，label則是我們要標記的文字，family是中文字型。\n\n目前文字看起來還不是很美觀，我會留在最後再做調整。"
  },
  {
    "objectID": "posts/DataViz/身心障礙者人數/身心障礙人數.html#加入標題及註解",
    "href": "posts/DataViz/身心障礙者人數/身心障礙人數.html#加入標題及註解",
    "title": "身心障礙者人數佔總人口比率-資料取得、整理及視覺化",
    "section": "加入標題及註解",
    "text": "加入標題及註解\n\np &lt;- p +\n  labs(\n        title = \"各縣市身心障礙者佔人口數比率\",\n        subtitle = \"各縣市男性比率皆大於女性，其中台東縣男女間差距最大，澎湖縣則最小\",\n        x = \"身心障礙者佔人口數比率（％）\",\n        caption = c(\"註：男性比率為男性身心障礙人口數除以男性總人口數，女性比率算法以此類推\",\n                    \"資料時間：2023年底．資料來源：衛生福利部統計處\"),\n    ) \np\n\n\n\n\n\n\n\n\n我們使用labs()來加上標題及註解，大致上應該很好理解如何使用，只有兩處要詳細說明：\n\nx設定x軸的標題，所以我們能以此類推，y就是設定y軸的標題。因為我選擇直接將縣市飆在線段旁邊，而且我認為不用加y軸標題也能知道他們代表不同縣市，所以沒有設定y軸標題。\n在caption中，設定了兩段文字，但目前只顯示了其中一個，我們在之後會調整caption的位置，那時兩段文字才會都顯示出來。"
  },
  {
    "objectID": "posts/DataViz/身心障礙者人數/身心障礙人數.html#調整圖形的style",
    "href": "posts/DataViz/身心障礙者人數/身心障礙人數.html#調整圖形的style",
    "title": "身心障礙者人數佔總人口比率-資料取得、整理及視覺化",
    "section": "調整圖形的Style",
    "text": "調整圖形的Style\n\n調整兩軸的文字及標記\n\n\np &lt;- p + theme(\n  axis.title.y = element_blank(),\n  axis.title = element_text(size = 8),\n  axis.text = element_text(size = ),\n  axis.text.y = element_blank(),\n  axis.ticks.length = unit(0, \"cm\")\n)\np\n\n\n\n\n\n\n\n\n\np &lt;- p + theme(\n    #plot\n    plot.title = element_text(size = 16, \n                              color = \"#071952\", \n                              face = \"bold\",\n                              margin = margin(t = 0, b = 1)),\n    plot.subtitle = element_text(size = 12, margin = margin(b = 5)),\n    plot.caption = element_text(size = 8, hjust = c(0,1)),\n    plot.margin = unit(c(1.2,1.2,1.2,1.2), \"cm\"),\n)\np"
  },
  {
    "objectID": "posts/DataViz/2024-09-身心障礙者人數/身心障礙人數.html",
    "href": "posts/DataViz/2024-09-身心障礙者人數/身心障礙人數.html",
    "title": "身心障礙者人數佔總人口比率-資料取得、整理及視覺化",
    "section": "",
    "text": "在這篇文章中，我會展示如何使用R從Excel檔案中提取資料，並整理成需要的形式，最後再將各縣市男性與女性的身心障礙者人數佔總人口數比率以點圖(dot plot)的方式做視覺化。目標的圖表長這樣："
  },
  {
    "objectID": "posts/DataViz/2024-09-身心障礙者人數/身心障礙人數.html#下載資料",
    "href": "posts/DataViz/2024-09-身心障礙者人數/身心障礙人數.html#下載資料",
    "title": "身心障礙者人數佔總人口比率-資料取得、整理及視覺化",
    "section": "下載資料",
    "text": "下載資料\n使用的資料是從衛生福利部統計處的網站下載，在「衛生福利公務統計」&gt;「社會福利公務統計一覽表」中的「2.3.1身心障礙者人數按類別及縣市別分」統計表。大致上長這樣：\n\n\n\n\n\n統計表是Excel格式，資料內容包含：\n\n身心障礙者人數，分男性與女性\n各類別身心障礙者人數\n身心障礙者人數佔總人口比率\n上面三項資料依照各縣市區分\n從2011年到2023年的資料\n\n我們需要將資料從Excel檔案中提取出來。"
  },
  {
    "objectID": "posts/DataViz/2024-09-身心障礙者人數/身心障礙人數.html#從excel表中擷取需要的資料",
    "href": "posts/DataViz/2024-09-身心障礙者人數/身心障礙人數.html#從excel表中擷取需要的資料",
    "title": "身心障礙者人數佔總人口比率-資料取得、整理及視覺化",
    "section": "從Excel表中擷取需要的資料",
    "text": "從Excel表中擷取需要的資料\n首先，讓我們先載入需要的library：\n\nlibrary(tidyverse)\nlibrary(readxl)\n\n\ntidyverse是用來整理資料及繪製統計圖表\nreadxl則是用來讀取Excel檔案\n\n接著，我們用readxl中的read_xlsx來讀取人數佔比率的資料：\n\nread_xlsx(\"data/2.3.1身心障礙者人數按類別及縣市別分.xlsx\", \n          sheet = \"2023\", \n          range = anchored(\"A8\", dim = c(23, 17)),\n          col_names = as.character(1:17)) |&gt; #從excel檔中提取所需的資料\nselect(\"1\", \"15\",\"16\", \"17\")  |&gt; #挑選需要的變數\nrename(\"region\" = \"1\", #對變數重新命名\n       \"total\" = \"15\",\n       \"male\" = \"16\",\n       \"female\" = \"17\") \n\n我會一項接著一項解釋這段程式碼做了什麼：\n\nread_xlsx：\n\n第一項要放入Excel檔案的位置。\nsheet則是指定你要的哪一個資料表，這裡放入\"2023\"代表你想要讀取的是名字為「2023」的工作表。如果放入數字的話，則是告訴這個函數要讀取第幾個表，舉例來說，若設定sheet = 5則會讀取第5個表。\nrange是用來指定要選取的儲存格範圍。anchored(\"A8\", dim = c(23, 17))指定的是儲存格A8向下23列、向右17行的資料。\n其他指定資料範圍的方法包括range = \"B3:D6\" 來指定一個長方形的左上角及右下角、range = cell_rows(3:5)來選取第3到5行的資料，細節可參考這裡。\ncol_names = as.character(1:17)則是暫時給每一個column暫時的名稱。會這麼做的原因是，如果不這麼做，column name中會包含中文，我在寫code的途中這麼做的時候，我的R session不斷地當機，必須改成不包含中文的名稱才能順利讀取資料。\n\n從Excel中可以知道第1、15、16、17是我們需要的變數，select(\"1\", \"15\",\"16\", \"17\")用來選取我們要的columns。\nrename(\"region\" = \"1\", \"total\" = \"15\", \"male\" = \"16\", \"female\" = \"17\")則是將column name改成更好理解的名稱。\n\n提取出來的資料集，就會包含我們所需要的資料：\n\ndf &lt;- read_xlsx(\"data/2.3.1身心障礙者人數按類別及縣市別分.xlsx\", \n          sheet = \"2023\",\n          range = anchored(\"A8\", dim = c(23, 17)),\n          col_names = as.character(1:17)) |&gt; #從excel檔中提取所需的資料\nselect(\"1\", \"15\",\"16\", \"17\")  |&gt; #挑選需要的變數\nrename(\"region\" = \"1\",\n       \"total\" = \"15\",\n       \"male\" = \"16\",\n       \"female\" = \"17\") #對變數重新命名\n\ndf\n\n# A tibble: 23 × 4\n   region                 total  male female\n   &lt;chr&gt;                  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n 1 總計  Total             5.19  5.79   4.6 \n 2 新北市 New Taipei City  4.44  5.07   3.85\n 3 臺北市 Taipei City      4.74  5.33   4.21\n 4 桃園市 Taoyuan City     3.96  4.48   3.46\n 5 臺中市 Taichung City    4.68  5.28   4.11\n 6 臺南市 Tainan City      5.35  5.91   4.8 \n 7 高雄市 Kaohsiung City   5.4   5.99   4.84\n 8 宜蘭縣 Yilan County     7.06  7.58   6.54\n 9 新竹縣 Hsinchu County   4.04  4.6    3.46\n10 苗栗縣 Miaoli County    6.32  6.93   5.66\n# ℹ 13 more rows"
  },
  {
    "objectID": "posts/DataViz/2024-09-身心障礙者人數/身心障礙人數.html#整理地區的文字",
    "href": "posts/DataViz/2024-09-身心障礙者人數/身心障礙人數.html#整理地區的文字",
    "title": "身心障礙者人數佔總人口比率-資料取得、整理及視覺化",
    "section": "整理地區的文字",
    "text": "整理地區的文字\n你可以觀察到，各縣市的文字中包含縣市的英文，為了能將縣市名稱更簡潔的呈現在圖表中，我們要剔除英文名稱。\n首先，我們先將地區名稱中英文的部分分開來：\n\ndf |&gt; separate_wider_delim(\n        cols = region, \n        delim = \" \",\n        names = c(\"region\", \"region_eng\"),\n        too_many = \"drop\"\n    )\n\n# A tibble: 23 × 5\n   region region_eng  total  male female\n   &lt;chr&gt;  &lt;chr&gt;       &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n 1 總計   \"\"           5.19  5.79   4.6 \n 2 新北市 \"New\"        4.44  5.07   3.85\n 3 臺北市 \"Taipei\"     4.74  5.33   4.21\n 4 桃園市 \"Taoyuan\"    3.96  4.48   3.46\n 5 臺中市 \"Taichung\"   4.68  5.28   4.11\n 6 臺南市 \"Tainan\"     5.35  5.91   4.8 \n 7 高雄市 \"Kaohsiung\"  5.4   5.99   4.84\n 8 宜蘭縣 \"Yilan\"      7.06  7.58   6.54\n 9 新竹縣 \"Hsinchu\"    4.04  4.6    3.46\n10 苗栗縣 \"Miaoli\"     6.32  6.93   5.66\n# ℹ 13 more rows\n\n\n\nseparate_wider_delim()函數的功能是將字串根據某個符號為分界，來分開為不同行。\ncols指定要分開的對象，這裡我們要分開的目標是region這一行。\ndelim則是指定要以什麼文字或符號分開，這裡我們以中英文之間的空格做區分，所以delim = \" \"。\nnames是指定你分開後的行要叫什麼名稱。\n如果以仔細觀察，可以發現region中的文字有的包含不只一個空格，因為我們只想以第一個空格做切分，所以設定too_many = \"drop\"把多的部分都丟掉\n\n接著我們再把不需要的region_eng丟掉，並將region中的「總計」轉換成「全國」：\n\ndf &lt;- df |&gt; separate_wider_delim(\n        cols = region, \n        delim = \" \",\n        names = c(\"region\", \"region_eng\"),\n        too_many = \"drop\"\n    ) |&gt; \n    select(-2) |&gt; \n    mutate(\n        region = if_else(region == \"總計\", \"全國\", region)\n    )\ndf\n\n# A tibble: 23 × 4\n   region total  male female\n   &lt;chr&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n 1 全國    5.19  5.79   4.6 \n 2 新北市  4.44  5.07   3.85\n 3 臺北市  4.74  5.33   4.21\n 4 桃園市  3.96  4.48   3.46\n 5 臺中市  4.68  5.28   4.11\n 6 臺南市  5.35  5.91   4.8 \n 7 高雄市  5.4   5.99   4.84\n 8 宜蘭縣  7.06  7.58   6.54\n 9 新竹縣  4.04  4.6    3.46\n10 苗栗縣  6.32  6.93   5.66\n# ℹ 13 more rows\n\n\n\nselect(-2)的意思是選擇除了第2行以外的變數。\nmutate( region = if_else(region == \"總計\", \"全國\", region) )則是當region中的值是「總計」時用「全國」取代它，其他的時候則保留原本region的值。"
  },
  {
    "objectID": "posts/DataViz/2024-09-身心障礙者人數/身心障礙人數.html#轉換資料架構",
    "href": "posts/DataViz/2024-09-身心障礙者人數/身心障礙人數.html#轉換資料架構",
    "title": "身心障礙者人數佔總人口比率-資料取得、整理及視覺化",
    "section": "轉換資料架構",
    "text": "轉換資料架構\n我們需要資料是tidy的形式，代表資料集中的每一個行都是一個變數，每一個儲存格中都只儲存一個值(更詳細的定義及解釋可參考這裡)。原本的資料中，性別(gender)這個變數沒有被列在一個行中，而是分別散佈在三個不同的行中，我們可以使用pivot_longer做到這件事：\n\ndf &lt;- df |&gt; pivot_longer(\n        cols = c(\"total\", \"male\", \"female\"),\n        names_to = \"gender\",\n        values_to = \"ratio\")\n\n\npivot_longer 是將原本的資料「拉長」，將存於行標題中的資料放到儲存格裡。\ncols指定要轉換的行，我們要將性別的資料放下來到儲存格中，所以設定cols = c(\"total\", \"male\", \"female\")。\nnames_to指定我們放下來的資料那一行的標題名稱，因為是性別資料，因此設定為names_to = \"gender\"。\n原本在\"total\", \"male\", \"female\" 下方的資料是比率，所以透過values_to = \"ratio\"將它們命名為ratio。\n\n整理完後的資料就會呈現這樣的形式：\n\n\n# A tibble: 69 × 3\n   region gender ratio\n   &lt;chr&gt;  &lt;chr&gt;  &lt;dbl&gt;\n 1 全國   total   5.19\n 2 全國   male    5.79\n 3 全國   female  4.6 \n 4 新北市 total   4.44\n 5 新北市 male    5.07\n 6 新北市 female  3.85\n 7 臺北市 total   4.74\n 8 臺北市 male    5.33\n 9 臺北市 female  4.21\n10 桃園市 total   3.96\n# ℹ 59 more rows\n\n\n整理好資料後，我們終於可以進入視覺化的部分。"
  },
  {
    "objectID": "posts/DataViz/2024-09-身心障礙者人數/身心障礙人數.html#主要圖形",
    "href": "posts/DataViz/2024-09-身心障礙者人數/身心障礙人數.html#主要圖形",
    "title": "身心障礙者人數佔總人口比率-資料取得、整理及視覺化",
    "section": "主要圖形",
    "text": "主要圖形\n先畫出每個縣市男性與女性比率的點，以及連接的線段：\n\ndf |&gt; \n    filter(gender != \"total\") |&gt;  \n    ggplot(aes(x = ratio, y = region)) +\n    geom_line() +\n    geom_point() \n\n\n\n\n\n\n\n\n\n因為我們不需要總體的比率，所以用filter(gender != \"total\")將它們篩選掉。\n我們想要將縣市的位置畫在y軸，比率的資料畫在x軸，所以ggplot中的aes會設定成aes(x = ratio, y = region)。\ngeom_line及geom_point分別畫出線段及點。\n\n為了更容易區分男性及女性的資料，我會將它們塗上不同的顏色。除此之外，還會設定點的大小以及線段的粗細：\n\ndf |&gt; \n    filter(gender != \"total\") |&gt;  \n    ggplot(aes(x = ratio, y = region)) +\n    geom_line(linewidth = 1.5, color = \"#758694\") +\n    geom_point(aes(color = gender), size = 2) \n\n\n\n\n\n\n\n\n\ngeom_line中，linewidth及color是用來調整線的粗細及顏色。\ngeom_point中的aes(color = gender)則是說我們要根據gender這個變數來調整點的顏色。\n\n你應該已經發現了，Ｒ這時沒辦法顯示中文字，我們可以用指定中文字型的方式來解決：\n\ndf |&gt; \n    filter(gender != \"total\") |&gt;  \n    ggplot(aes(x = ratio, y = region)) +\n    geom_line(linewidth = 1.5, color = \"#758694\") +\n    geom_point(aes(color = gender), size = 2) +\n    theme(\n        text = element_text(family = \"Noto Sans TC\")\n    )\n\n\n\n\n\n\n\n\n\ntheme函數是用來設定圖表的整體風格的，之後我們會再用到它。\ntheme函數中調整圖案風格的方法大都是以element_{物件種類}的方式分做設定。舉例來說，我們要調整的是文字，所以是用element_text，如果要調整的物件是線條的話，那就是用element_line。\nfamily = \"Noto Sans TC\"則是將字體設定為煩繁體中文的思源黑體。\n\n為了保持一致性，我會將縣市間呈現的順序調整成與原始資料集中呈現的一樣。做法是將region這個變數調整成Ｒ的factor類型變數，再指定其level，訂定縣市的先後順序。所以我們先做一個表示level的vector：\n\nregion_level &lt;- df |&gt; \n    select(region) |&gt; \n    distinct(region) |&gt; \n    pull() |&gt; \n    rev()\nregion_level\n\n [1] \"連江縣\" \"金門縣\" \"嘉義市\" \"新竹市\" \"基隆市\" \"澎湖縣\" \"花蓮縣\" \"臺東縣\"\n [9] \"屏東縣\" \"嘉義縣\" \"雲林縣\" \"南投縣\" \"彰化縣\" \"苗栗縣\" \"新竹縣\" \"宜蘭縣\"\n[17] \"高雄市\" \"臺南市\" \"臺中市\" \"桃園市\" \"臺北市\" \"新北市\" \"全國\"  \n\n\n再將region轉化為factor：\n\np &lt;- df |&gt; \n    filter(gender != \"total\") |&gt;  \n    ggplot(aes(x = ratio, y = factor(region, region_level))) + #轉換為factor\n    geom_line(linewidth = 1.5, color = \"#758694\") +\n    geom_point(aes(color = gender), size = 2) +\n    theme(\n        text = element_text(family = \"Noto Sans TC\")\n    )\np"
  },
  {
    "objectID": "posts/DataViz/2024-09-身心障礙者人數/身心障礙人數.html#調整scale變數",
    "href": "posts/DataViz/2024-09-身心障礙者人數/身心障礙人數.html#調整scale變數",
    "title": "身心障礙者人數佔總人口比率-資料取得、整理及視覺化",
    "section": "調整Scale變數",
    "text": "調整Scale變數\n在圖表中，我們在x軸畫出比率的資料，在y軸分別縣市，用顏色區分性別。在ggplot2中，我們可以使用scale_{aes}_{type}的方式調整這三項要素呈現的方式，aes指的是要設定的要素，type則是定義我們設定這個aes的方法或要呈現的形式。\n指定不同性別的顏色\n\np + scale_color_discrete(\n      labels = c(\"女性\", \"男性\"), #改變性別的呈現方式\n      type = c(\"#E76F55\", \"#01B8A9\") #指定顏色\n    )\n\n\n\n\n\n\n\n\n\n因為要調整的是顏色，所以是scale_color_{type}。另外，因為性別是離散的變數，所以是scale_color_discrete。\nlabels指定的是呈現性別這個變數的標籤，你可以看到右方的圖示改變了。type則是指定要呈現的顏色。\n\n調整x軸標籤的格式\n我們的目標圖形中，x軸的數字是呈現到小數點後一位，我們可以用scales這個library來設定：\n\np + scale_x_continuous(\n    labels = scales::label_number(accuracy = 0.1),\n    breaks = seq(3, 9, 1)\n)\n\n\n\n\n\n\n\n\n\nscales::label_number(accuracy = 0.1)是將你所呈現的數字的精準度以0.1為一單位。在scales library中，還有其他函數能指定你數值呈現的方式，例如label_dollar可以將數字轉化為貨幣的形式，更多細節可以參考這裡。\nbreaks = seq(3, 9, 1)則是設定你要呈現標記出數值的地方。用下面這個例子來讓你更暸解其運作方式，如果我們x軸標籤只想要顯示5和8兩個數值：\n\np + scale_x_continuous(\n    labels = scales::label_number(accuracy = 0.1),\n    breaks = c(5, 8)\n)\n\n\n\n\n\n\n\n\n\n將上面2個部分整合起來：\n\np &lt;- p + \n    scale_color_discrete(\n        labels = c(\"女性\", \"男性\"), #性別標籤\n        type = c(\"#E76F55\", \"#01B8A9\") #指定顏色\n    ) +\n    scale_x_continuous(\n        labels = scales::label_number(accuracy = 0.1), #以0.1為最小單位\n        breaks = seq(3, 9, by = 1) #標記3到9\n    )\np"
  },
  {
    "objectID": "posts/DataViz/2024-09-身心障礙者人數/身心障礙人數.html#直接將縣市標示在圖形旁邊",
    "href": "posts/DataViz/2024-09-身心障礙者人數/身心障礙人數.html#直接將縣市標示在圖形旁邊",
    "title": "身心障礙者人數佔總人口比率-資料取得、整理及視覺化",
    "section": "直接將縣市標示在圖形旁邊",
    "text": "直接將縣市標示在圖形旁邊\n為了讓讀者更容易辨別每一個線段屬於哪一個縣市，我們可以將縣市的文字標注在線段旁邊。我們首先製作一個資料集用來指定要標記的文字及標注的位置：\n\nloca &lt;- df |&gt; \n    filter(\n        gender == \"female\"\n    ) |&gt; \n    mutate(\n        position = ratio - .25\n    )\nloca\n\n# A tibble: 23 × 4\n   region gender ratio position\n   &lt;chr&gt;  &lt;chr&gt;  &lt;dbl&gt;    &lt;dbl&gt;\n 1 全國   female  4.6      4.35\n 2 新北市 female  3.85     3.6 \n 3 臺北市 female  4.21     3.96\n 4 桃園市 female  3.46     3.21\n 5 臺中市 female  4.11     3.86\n 6 臺南市 female  4.8      4.55\n 7 高雄市 female  4.84     4.59\n 8 宜蘭縣 female  6.54     6.29\n 9 新竹縣 female  3.46     3.21\n10 苗栗縣 female  5.66     5.41\n# ℹ 13 more rows\n\n\n\n因為我們要將文字標記在女性比例的左側，所以我們只保留女性的資料(filter(gender == \"female\"))。\n文字的位置要放在女性比率的左側一點點，所以透過將比率的值減去一點點，新設立一個新變數來表示位置mutate( position = ratio - .2 )。\n\n我們使用geom_text來標注文字：\n\np &lt;- p + \n    geom_text(data = loca, \n              aes(y = region, \n                  x = position, \n                  label = region, \n                  family = \"Noto Sans TC\"), \n              size = 4) \np\n\n\n\n\n\n\n\n\n\n因為我們現在要用loca來畫圖，所以要將資料設定為loca，data = loca。\n在aes()中，x和y是指定文字的座標，label則是我們要標記的文字，family是中文字型。\n\n目前文字看起來還不是很美觀，我會留在最後再做調整。"
  },
  {
    "objectID": "posts/DataViz/2024-09-身心障礙者人數/身心障礙人數.html#加入標題及註解",
    "href": "posts/DataViz/2024-09-身心障礙者人數/身心障礙人數.html#加入標題及註解",
    "title": "身心障礙者人數佔總人口比率-資料取得、整理及視覺化",
    "section": "加入標題及註解",
    "text": "加入標題及註解\n標題及註解能正確的告訴讀者我們所呈現數據的意義，是必不可少的。我們使用labs()來加上標題及註解：\n\np &lt;- p +\n  labs(\n        title = \"各縣市身心障礙者佔人口數比率\",\n        subtitle = \"各縣市男性比率皆大於女性，其中台東縣男女間差距最大，澎湖縣則最小\",\n        x = \"身心障礙者佔人口數比率（％）\",\n        caption = c(\"註：男性比率為男性身心障礙人口數除以男性總人口數，女性比率算法以此類推\",\n                    \"資料時間：2023年底．資料來源：衛生福利部統計處\"),\n    ) \np\n\n\n\n\n\n\n\n\n大致上應該很好理解如何使用，只有兩處要詳細說明：\n\nx設定x軸的標題，所以我們能以此類推，y就是設定y軸的標題。因為我選擇直接將縣市飆在線段旁邊，而且我認為不用加y軸標題也能知道他們代表不同縣市，所以沒有設定y軸標題。\n在caption中，設定了兩段文字，但目前只顯示了其中一個，我們在之後會調整caption的位置，那時兩段文字才會都顯示出來。"
  },
  {
    "objectID": "posts/DataViz/2024-09-身心障礙者人數/身心障礙人數.html#調整圖形的style",
    "href": "posts/DataViz/2024-09-身心障礙者人數/身心障礙人數.html#調整圖形的style",
    "title": "身心障礙者人數佔總人口比率-資料取得、整理及視覺化",
    "section": "調整圖形的Style",
    "text": "調整圖形的Style\n繪製圖形的最後一步是調整圖形中各要素的呈現方式。\n\n調整兩軸的文字及標記\n\n\np &lt;- p + theme(\n  axis.title.y = element_blank(),\n  axis.title.x = element_text(size = 12),\n  axis.text.x = element_text(size = 10),\n  axis.text.y = element_blank(),\n  axis.ticks.length = unit(0, \"cm\")\n)\np\n\n\n\n\n\n\n\n\n\naxis開頭的函數是用來調整x軸及y軸相關的要素的。\naxis.title是用來設定軸的標題：\n\naxis.title.y = element_blank()是將y軸的標題拿掉，本來是自動設定的factor(region, region_level)。\naxis.title.x = element_text(size = 8)則是設定x軸標題的大小，也就是「身心障礙者佔人口數比率（％）」這段文字的大小。\n\naxis.text則是設定軸上的文字，也就是縣市和比率的數值：\n\n因為我們已經將縣市標記在線段旁邊了，所以拿掉x軸上標記縣市的文字\n\naxis.ticks.length則是設定軸文字旁標記的那個小小線段的長度，我要拿掉它們，所以將長度設定為0。\n\n\n調整圖示\n\n\np &lt;- p + theme(\n        legend.text = element_text(size = 10),\n        legend.position = \"inside\",\n        legend.position.inside = c(.9, .9),\n        legend.background = element_rect(fill = \"transparent\", \n                                         linewidth = .4,\n                                         color = \"#071952\"),\n        legend.title = element_blank()\n)\np\n\n\n\n\n\n\n\n\n\nlegend.position和legend.position.inside是用來設定圖示的位置，將其設定在圖形的裡面，並調整到一個合適的位置。\nlegend.background是用來設定圖是這個方框的，因為是長方形，所以用element_rect。\nlegend.title = element_blank()則是拿掉圖示的標題。\n\n\n調整格線\n\n\np &lt;- p + theme(\n        panel.grid.minor = element_blank(),\n        panel.grid.major.y = element_blank(),\n        panel.grid.major.x = element_line(linetype = 2)\n)\np\n\n\n\n\n\n\n\n\n\npanel指的是中間繪圖區的部分，格線要從這裡調整，基本上這裡做的調整是指保留垂直的格線，並設定為虛線。\n\n\n調整標題及註解的樣式和圖片的邊框\n\n\np &lt;- p + theme(\n    plot.title = element_text(size = 22, \n                              color = \"#071952\", \n                              face = \"bold\",\n                              margin = margin(t = 0, b = 2)),\n    plot.subtitle = element_text(size = 16, margin = margin(b = 5)),\n    plot.caption = element_text(size = 10, hjust = c(0,1)),\n    plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), \"cm\"),\n)\np\n\n\n\n\n\n\n\n\n\nplot指的是整個圖片，所以標題、註解以及邊界都屬於這裡。\n\nelement_text中的margin可以在文字的周圍加上邊界，margin()函數中可以設定t、r、b、l四個參數，分別為top、right、bottom、left，可以用trouble這個字來記憶順序。\n在plot.catption中，hjust是用來調整水平位置的，因為我們的caption有兩個，所以給它兩個值，分別代表放在最左邊以及最右邊。\n\n\n在經歷上述的過程後你就可以得到我們目標的圖片了！"
  },
  {
    "objectID": "gallery.html#身心障礙人口數",
    "href": "gallery.html#身心障礙人口數",
    "title": "Gallery",
    "section": "身心障礙人口數",
    "text": "身心障礙人口數\n\n\n\n\n\n\n\n資料來源：衛生福利部統計處\n資料時間：2023年底\n\n\n\n\n使用工具：R\n圖表：點圖，長條圖，折線圖"
  },
  {
    "objectID": "gallery.html#屏東縣合作社概況",
    "href": "gallery.html#屏東縣合作社概況",
    "title": "Gallery",
    "section": "屏東縣合作社概況",
    "text": "屏東縣合作社概況\n\n\n\n\n\n\n\n資料來源：屏東縣政府統計資訊網\n資料時間：2023年底\n\n\n\n\n使用工具：Excel, PowerPoint\n圖表：折線圖，長條圖，矩形式樹狀圖，點圖"
  },
  {
    "objectID": "posts/DataViz/2024-09-身心障礙者人數/身心障礙人數.html#調整圖形的樣式",
    "href": "posts/DataViz/2024-09-身心障礙者人數/身心障礙人數.html#調整圖形的樣式",
    "title": "身心障礙者人數佔總人口比率-資料取得、整理及視覺化",
    "section": "調整圖形的樣式",
    "text": "調整圖形的樣式\n繪製圖形的最後一步是調整圖形中各要素的呈現方式。\n\n\n調整兩軸的文字及標記\n\np &lt;- p + theme(\n  axis.title.y = element_blank(),\n  axis.title.x = element_text(size = 12),\n  axis.text.x = element_text(size = 10),\n  axis.text.y = element_blank(),\n  axis.ticks.length = unit(0, \"cm\")\n)\np\n\n\n\n\n\n\n\n\n\naxis開頭的函數是用來調整x軸及y軸相關的要素的。\naxis.title是用來設定軸的標題：\n\naxis.title.y = element_blank()是將y軸的標題拿掉，本來是自動設定的factor(region, region_level)。\naxis.title.x = element_text(size = 8)則是設定x軸標題的大小，也就是「身心障礙者佔人口數比率（％）」這段文字的大小。\n\naxis.text則是設定軸上的文字，也就是縣市和比率的數值：\n\n因為我們已經將縣市標記在線段旁邊了，所以拿掉x軸上標記縣市的文字\n\naxis.ticks.length則是設定軸文字旁標記的那個小小線段的長度，我要拿掉它們，所以將長度設定為0。\n\n\n\n\n調整圖示\n\np &lt;- p + theme(\n        legend.text = element_text(size = 10),\n        legend.position = \"inside\",\n        legend.position.inside = c(.9, .9),\n        legend.background = element_rect(fill = \"transparent\", \n                                         linewidth = .4,\n                                         color = \"#071952\"),\n        legend.title = element_blank()\n)\np\n\n\n\n\n\n\n\n\n\nlegend.position和legend.position.inside是用來設定圖示的位置，將其設定在圖形的裡面，並調整到一個合適的位置。\nlegend.background是用來設定圖是這個方框的，因為是長方形，所以用element_rect。\nlegend.title = element_blank()則是拿掉圖示的標題。\n\n\n\n\n調整格線\n\np &lt;- p + theme(\n        panel.grid.minor = element_blank(),\n        panel.grid.major.y = element_blank(),\n        panel.grid.major.x = element_line(linetype = 2)\n)\np\n\n\n\n\n\n\n\n\n\npanel指的是中間繪圖區的部分，格線要從這裡調整，基本上這裡做的調整是指保留垂直的格線，並設定為虛線。\n\n\n\n\n調整標題、註解的樣式和圖片的邊框\n\np &lt;- p + theme(\n    plot.title = element_text(size = 22, \n                              color = \"#071952\", \n                              face = \"bold\",\n                              margin = margin(t = 0, b = 2)),\n    plot.subtitle = element_text(size = 16, margin = margin(b = 5)),\n    plot.caption = element_text(size = 10, hjust = c(0,1)),\n    plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), \"cm\"),\n)\np\n\n\n\n\n\n\n\n\n\nplot指的是整個圖片，所以標題、註解以及邊界都屬於這裡。\n\nelement_text中的margin可以在文字的周圍加上邊界，margin()函數中可以設定t、r、b、l四個參數，分別為top、right、bottom、left，可以用trouble這個字來記憶順序。\n在plot.catption中，hjust是用來調整水平位置的，因為我們的caption有兩個，所以給它兩個值，分別代表放在最左邊以及最右邊。\n\n\n如此一來，我們就得到了目標的圖表了！\n\n至此，這次的旅程就結束了，歡迎你下次再跟我一起踏上視覺化之旅。\n以下是完整的資料處理和視覺化的code\n資料處理：\n\n\nCode\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(writexl)\n\n# Helper functions\n\n## tidying the data\nget_gender_longer &lt;- function(df){\n    df &lt;- df |&gt; pivot_longer(\n        cols = c(\"total\", \"male\", \"female\"),\n        names_to = \"gender\",\n        values_to = \"ratio\")\n    return(df)\n}\n\n## adjusting the format of the region data\nadjusting_format_after2021 &lt;- function(df, y){\n    df &lt;- df |&gt; separate_wider_delim(\n        cols = region, \n        delim = \" \",\n        names = c(\"region\", \"2\"),\n        too_many = \"drop\"\n    ) |&gt; \n        select(c(-2))|&gt; \n        mutate(\n            region = if_else(region == \"總計\", \"全國\", region)\n        ) |&gt; \n        mutate(\n            year = y\n        ) |&gt; \n        select(\n            year, region, gender, ratio\n        )\n    return(df)\n}\n\nadjusting_format_before2020 &lt;- function(df, y){\n    df &lt;- df |&gt; separate_wider_position(\n        cols = region, \n        widths = c(region = 3, 1),\n        too_many = \"drop\"\n    ) |&gt; \n        mutate(\n            region = if_else(region == \"總計T\", \"全國\", region)\n        ) |&gt; \n        mutate(\n            year = y\n        ) |&gt; \n        select(\n            year, region, gender, ratio\n        )\n    return(df)\n}\n\n\n## get the ratio data from 2021 to 2023\nget_ratio_after2021 &lt;- function(y){\n    # read the data from an excel file\n    df &lt;- read_xlsx(\"data/2.3.1身心障礙者人數按類別及縣市別分.xlsx\", \n                    sheet = y,\n                    range = anchored(\"A8\", dim = c(23, 17)),\n                    col_names = as.character(1:17)) |&gt;\n        select(c(c(\"1\", \"15\",\"16\", \"17\")))  |&gt; # selecting columns we want\n        rename(\"region\" = \"1\",\n               \"total\" = \"15\",\n               \"male\" = \"16\",\n               \"female\" = \"17\") # rename the columns\n    \n    # tidying the data\n    df &lt;- get_gender_longer(df)\n    \n    # adjusting the format of the region data\n    df &lt;- adjusting_format_after2021(df, y)\n    return(df)\n}\n\n## get the ratio data from 2012 to 2021\nget_ratio_before2020 &lt;- function(y){\n    # read the data from an excel file\n    df &lt;- read_xlsx(\"data/2.3.1身心障礙者人數按類別及縣市別分.xlsx\", \n                    sheet = y,\n                    range = anchored(\"A8\", dim = c(23, 24)),\n                    col_names = as.character(1:24)) |&gt;\n        select(c(c(\"1\", \"22\",\"23\", \"24\")))  |&gt; # selecting columns we want\n        rename(\"region\" = \"1\",\n               \"total\" = \"22\",\n               \"male\" = \"23\",\n               \"female\" = \"24\") # rename the columns\n    \n    # tidying the data\n    df &lt;- get_gender_longer(df)\n    \n    # adjusting the format of the region data\n    df &lt;- adjusting_format_before2020(df, y)\n    return(df)\n}\n\n# main section\ndf_all &lt;- NA\n\nfor(y in 2012:2023){\n    if (y &lt;= 2020) {\n        df &lt;- get_ratio_before2020(as.character(y))\n    } else {\n        df &lt;- get_ratio_after2021(as.character(y))\n    }\n    \n    if (is_tibble(df_all)) {\n        df_all &lt;- rbind(df_all, df)\n    } else {\n        df_all &lt;- df\n    }\n}\n\n#write_csv(df_all, \"data/佔總人數比率.csv\")\n\n\n視覺化：\n\n\nCode\nlibrary(tidyverse)\n\n#read data from a csv file and rename the columns\ndf &lt;- read_csv(\"data/佔總人數比率.csv\",\n               show_col_types = FALSE) |&gt; \n        filter(year == \"2023\",\n               gender %in% c(\"male\", \"female\"))\n   \nregion_level &lt;- df |&gt; \n    select(region) |&gt; \n    distinct(region) |&gt; \n    pull() |&gt; \n    rev()\n\n\np &lt;- ggplot(df, aes(x = ratio, y = factor(region, region_level))) +\n    geom_line(aes(group = region), size = 1.5, color = \"#758694\") +\n    geom_point(aes(color = gender), size = 5) +\n    labs(\n        title = \"各縣市身心障礙者佔人口數比率\",\n        subtitle = \"各縣市男性比率皆大於女性，其中台東縣男女間差距最大，澎湖縣則最小\",\n        x = \"身心障礙者佔人口數比率（％）\",\n        caption = c(\"註：男性比率為男性身心障礙人口數除以男性總人口數，女性比率算法以此類推\",\n                    \"資料時間：2023年底．資料來源：衛生福利部統計處\"),\n    ) +\n    scale_x_continuous(labels = scales::label_number(accuracy = 0.1),\n                       breaks = seq(0, 10, 1)) +\n    scale_color_discrete(labels = c(\"女性\", \"男性\"), \n                         type = c(\"#E76F51\", \"#00B8A9\")) +\n    theme(\n        text = element_text(family = \"Noto Sans TC\", color = \"#364F6B\"),\n        # axis\n        axis.title.y = element_blank(),\n        axis.title = element_text(size = 16),\n        axis.text = element_text(size = 14),\n        axis.text.y = element_blank(),\n        axis.ticks.length = unit(0, \"cm\"),\n        #plot\n        plot.title = element_text(size = 27, \n                                  color = \"#071952\", \n                                  face = \"bold\",\n                                  margin = margin(t = 5, b = 5)),\n        plot.subtitle = element_text(size = 22, margin = margin(b = 15)),\n        plot.caption = element_text(size = 12, hjust = c(0,1)),\n        plot.margin = unit(c(1.2,1.2,1.2,1.2), \"cm\"),\n        #legend\n        legend.text = element_text(size = 14),\n        legend.position = c(.9, .92),\n        legend.background = element_rect(fill = \"transparent\", \n                                         linewidth = .4,\n                                         color = \"#071952\"),\n        legend.title = element_blank(),\n        #panel\n        panel.grid.minor = element_blank(),\n        panel.grid.major.y = element_blank(),\n        panel.grid.major.x = element_line(linetype = 2)\n    )\n\nloca &lt;- df |&gt; \n    filter(\n        gender == \"female\"\n    ) |&gt; \n    mutate(\n        ratio = ratio - .2\n    )\n\np &lt;- p + geom_text(data = loca, \n              aes(y = region, x = ratio, label = region, family = \"Noto Sans TC\"), \n              size=5)\np\n# ggsave(\"身心障礙者佔總人口數比率.png\",\n#        path = \"img/\",\n#        width = 16,\n#        height = 10,\n#        dpi = 400)"
  },
  {
    "objectID": "gallery.html#台電發購電能源",
    "href": "gallery.html#台電發購電能源",
    "title": "Gallery",
    "section": "台電發購電能源",
    "text": "台電發購電能源\n\n\n\n\n\n\n\n資料來源：台灣電力公司網站\n資料時間：2023年\n\n\n\n\n使用工具：R, Affinity Designer\n圖表：長條圖，折線圖"
  },
  {
    "objectID": "posts/DataViz/2024-09-lollipop_chart/lollipop.html",
    "href": "posts/DataViz/2024-09-lollipop_chart/lollipop.html",
    "title": "對長條圖感到厭煩？何不試試棒棒糖圖(Lollipop chart)",
    "section": "",
    "text": "我常常繪製統計圖表，常常使用長條圖，但偶爾會對長條圖感到厭煩。所以我試著尋找比較少見，而且能替代長條圖功能的圖形。棒棒糖圖(lollipop chart)是我對長條圖感到厭倦時的解藥。\n\n什麼是棒棒糖圖(Lollipop chart)？\n\n\n\n\n\n\n\n\n\n棒棒糖圖與一般常見的長條圖在功能方面是完全一樣的，都是用來比較不同的種類或不同時間點間的數值差異。長條圖通常用「長條」的長度來表示數值的大小，棒棒糖圖則是用線段表示數值大小，並在末端加了一個點，因形似棒棒糖而得名。\n跟長條圖一樣存在著不同的變體，例如橫向的圖形：\n\n\n\n\n\n\n\n\n\n也可以用來同時比較正數及負數：\n\n\n\n\n\n\n\n\n\n有的時候還會看到有人利用末端的圓形放入數值標記：\n\n\n\n\n\n\n\n\n\n\n\n什麼時候適合使用棒棒糖圖？\n適合使用棒棒糖圖的時機，我認為有下列兩個：\n\n太頻繁的使用長條圖的時候\n想要降低圖案佔統計圖表之比例的時候\n\n設想今天你寫了一份資料分析報告，裡面需要很多不同類別間的數量比較，長條圖肯定是最直觀的選擇。但如果整份報告向下方圖形一樣，充滿了長條圖，很容易讓讀者感到煩膩並對圖形感到疲勞，降低了我們想要透過圖形傳遞重要資訊的效果。\n\n\n\n\n\n\n\n\n\n這時，棒棒糖圖是個可以替代長條圖的選擇。\n第二個使用時機是，當你要比較的種類很多，而且數值全部都很接近的時候。因為這時長條的圖案會佔你的整體圖表過多的比例，讓你的圖表變得很厚重：\n\n\n\n\n\n\n\n\n\n你可以利用棒棒糖圖可以降低這種感覺，讓圖案的佔比下降：\n\n\n\n\n\n\n\n\n\n\n\n使用ggplot繪製棒棒糖圖\n棒棒糖圖可以利用ggplot2的geom_point和geom_segment來畫，也就是用點和線段來組成棒棒糖的形狀。\n\n# 範例資料\ndata &lt;- data.frame(\n    type = LETTERS[1:15],\n    values = round(abs(rnorm(15, 40, 3)), 2)\n)\n\n# 繪製圖形\np &lt;- data |&gt; \n    ggplot(aes(x = type, y = values)) +\n    geom_point(size = 7, pch = 19, color = \"#41B3A2\") +\n    geom_segment(aes(x = type, xend = type, y = 0, yend = values),\n                 linewidth = 2, color = \"#41B3A2\") \np\n\n\n\n\n\n\n\n\n\ngeom_segment是用來畫出線段的，其中x、xend、y、yend指定的是你線段兩端點的座標。\n\n\n在圓點中標記數值\n\np &lt;- p + geom_text(aes(label = round(values, 1)),\n                   color = \"white\", size = 8, size.unit = \"pt\")\np\n\n\n\n\n\n\n\n\n\ngeom_text可以用來標記數值的，因為數值的位置和圓點一樣，所以aes()中不再設定x和y。label則是設定要標記的文字。\n\n\n繪製橫向棒棒糖圖\n要繪製橫向棒棒糖圖，可以使用coord_flip()將兩軸翻轉來達成。\n\np + coord_flip()\n\n\n\n\n\n\n\n\n\n同時比較正數及負數\n\ndata2 &lt;- data.frame(\n    type = LETTERS[1:15],\n    values = rnorm(15, 0, 5)\n)\n\ndata2 |&gt; \n    mutate(\n        c = as.factor(if_else(values &gt;= 0, 0, 1))\n    ) |&gt; \n    ggplot(aes(x = fct_reorder(type, desc(values)), \n               y = values, color = c)) +\n    geom_point(size = 3) +\n    geom_segment(aes(x = type, xend = type, y = 0, yend = values)) +\n    geom_hline(yintercept = 0) +\n    scale_color_manual(values = c(\"red\", \"grey\")) +\n    labs(x = \"type\") +\n    theme(\n        legend.position = \"none\",\n        axis.ticks.length = unit(0, \"mm\"),\n        axis.line.y = element_line(),\n        axis.text.y = element_text(size = 12),\n        panel.grid.minor = element_blank(),\n        panel.grid.major.x = element_blank(),\n        panel.grid.major.y = element_line(color = \"grey\", \n                                          linetype = \"dashed\"),\n        panel.background = element_blank()\n    ) \n\n\n\n\n\n\n\n\n這張圖比較正負數的圖，比起前面的圖形多做了三件事：\n\n依大小排序。是將type這個變數依據values的值來設定level，利用fct_reorder(type, desc(values)來達成。\n將正值及負值加上不同的顏色。\n\n用mutate()產生一個新變數c標記正負值，再依據其設定不同顏色(aes()中的color = c)。\nscale_color_manual(values = c(\"red\", \"grey\"))則是手動設定顏色。\n\n用geom_hline(yintercept = 0)在0的位置加上水平線，作為比較的基準。\n\n\n這次的介紹就到這裡，希望能幫到用膩了長條圖的你，謝謝。"
  },
  {
    "objectID": "NDDB.html",
    "href": "NDDB.html",
    "title": "N",
    "section": "",
    "text": "如何讓我的資料視覺化作品看起來更加美觀且專業？\n\n這個問題經常在我製作統計圖表時，躍上心頭。對平面設計一竅不通的我在追尋這個問題的答案時，《好設計，4個法則就夠了》（The Non-Designer`s Design Book, 4th Edition）這本書的書名，急遽的吸引了我這個Non-designer的目光，我毫不猶豫地翻開了它。讀完後，我好像稍稍的朝向Designer前進了一點。我將會分享我學到的概念，並展示如何將其應用到我的資料視覺化作品中。\n\n鍛鍊你的設計眼光\n\n\n4個設計法則"
  },
  {
    "objectID": "NDDB.html#鍛鍊你的設計眼光",
    "href": "NDDB.html#鍛鍊你的設計眼光",
    "title": "N",
    "section": "鍛鍊你的設計眼光",
    "text": "鍛鍊你的設計眼光"
  },
  {
    "objectID": "NDDB.html#個設計法則",
    "href": "NDDB.html#個設計法則",
    "title": "N",
    "section": "4個設計法則",
    "text": "4個設計法則"
  },
  {
    "objectID": "posts/Learning/book_NDDB/NDDB.html",
    "href": "posts/Learning/book_NDDB/NDDB.html",
    "title": "《好設計，4個法則就夠了》，簡單的設計法則讓作品變得更美觀",
    "section": "",
    "text": "這個問題經常在我製作統計圖表時，躍上心頭。對平面設計一竅不通的我在追尋這個問題的答案時，《好設計，4個法則就夠了》（The Non-Designer`s Design Book, 4th Edition）這本書吸引了我這個Non-designer的目光，我毫不猶豫地翻開了它。這篇文章中，我將會分享在書中學到的概念，並展示如何將其應用到我的資料視覺化作品上。"
  },
  {
    "objectID": "learning.html",
    "href": "learning.html",
    "title": "Learning",
    "section": "",
    "text": "《好設計，4個法則就夠了》，簡單的設計法則讓作品變得更美觀\n\n\n\n\n\n\nbook\n\n\ndesign\n\n\n\n簡述我從《好設計，4個法則就夠了》一書中學到的概念，並將其應用在資料視覺化作品中。\n\n\n\n\n\nOct 31, 2024\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/Learning/book_NDDB/NDDB.html#相近proximity",
    "href": "posts/Learning/book_NDDB/NDDB.html#相近proximity",
    "title": "《好設計，4個法則就夠了》，簡單的設計法則讓作品變得更美觀",
    "section": "相近(Proximity)",
    "text": "相近(Proximity)\n「相近」指的是將相關的物件放在一起，揭示它們是屬於同一個群體，組成視覺單元，用以顯示出你作品中的結構。如果只是隨意的將各種物件放在一起，會看起來毫無章法，缺乏專業感。更嚴重的是，若將不相關的物件放得太近，會給讀者它們有關聯的錯覺，傳遞錯誤的資訊。\n用下面我做的這張圖表為例：\n\n\n\n\n\n透過把相關的元素靠在一起，可以很明確的看出來有兩個大區塊，分別說明2023年的發電結構及歷年四種能源的發電量。在右邊這個區塊，我也使用相近原則區分出不同的能源。"
  },
  {
    "objectID": "posts/Learning/book_NDDB/NDDB.html#對齊alignment",
    "href": "posts/Learning/book_NDDB/NDDB.html#對齊alignment",
    "title": "《好設計，4個法則就夠了》，簡單的設計法則讓作品變得更美觀",
    "section": "對齊(Alignment)",
    "text": "對齊(Alignment)\n「對齊」則是要我們注意文字或圖形對齊的方式，增加作品的整齊感。作者提到，初學者常在整個作品中都使用置中對齊，因為文字長短不一，容易在文字左右兩邊產生錯落感，看起來會比較雜亂。使用一致的對齊方式，能讓畫面上產生一條隱形的線，讓整體畫面顯得更井井有條。\n以下面這個長條圖為例：\n\n\n\n\n\n你可以看到，類別標籤和圖中的其他文字對齊的方式不同，而且因為各種類別的字數不同，所以類別標籤的錯落感很強烈。\n調整對齊方式後：\n\n\n\n\n\n因使用與標題和註解相同的對齊方式，你可以感受到左側有一條隱形的線，使得整體畫面變得更加和諧一致。"
  },
  {
    "objectID": "posts/Learning/book_NDDB/NDDB.html#重複repetition",
    "href": "posts/Learning/book_NDDB/NDDB.html#重複repetition",
    "title": "《好設計，4個法則就夠了》，簡單的設計法則讓作品變得更美觀",
    "section": "重複(Repetition)",
    "text": "重複(Repetition)\n「重複」指的是在作品中多次使用相同的視覺元素，以強調結構，增加一致性。可以使用重複的顏色、形狀、自型、大小等元素，提高整體作品的一致性，提升視覺吸引力。\n舉例來說， 下面的這兩張圖表，我都用了同樣的顏色來代表男性及女性的資料："
  },
  {
    "objectID": "posts/Learning/book_NDDB/NDDB.html#對比contrast",
    "href": "posts/Learning/book_NDDB/NDDB.html#對比contrast",
    "title": "《好設計，4個法則就夠了》，簡單的設計法則讓作品變得更美觀",
    "section": "對比(Contrast)",
    "text": "對比(Contrast)\n「對比」指的是對作品中的物件製造對比，用以凸顯某些物件的不同。當作品一部分特別的不同，我們的目光很容易朝向這些突出的物件而去，能夠達到引導目光、強調重點的效果。\n用剛剛的長條圖為範例：\n\n\n\n\n\n你可以看到，有兩種類別的長條我用了不一樣的顏色，這是用來強調數量特別多的兩個類別。透過突出的顏色能加深讀者的印象，更能傳遞資料中所隱含的資訊。\n\n\n\n身為設計門外漢的我，在讀這本書的時候，驚呼連連。因書中許多作品，在應用設計原則後，真的變好看許多。希望我也能朝著Designer前進一點，做能令人驚呼的作品。"
  }
]